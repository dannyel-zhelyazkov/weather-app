{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/components/WeatherCard.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TempDisplay } from \"./TempDisplay\";\nimport { Card } from \"primereact/card\";\nimport styled from \"styled-components\";\nimport { Image } from \"primereact/image\";\nimport { Skeleton } from \"primereact/skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled(Card)`\n  background-color: blue;\n  cursor: pointer;\n  width: 250px;\n  height: 250px;\n  color: white;\n  border-radius: 5%;\n\n  .p-card-body {\n    padding: 0;\n  }\n\n  .p-card-content {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n_c = StyledCard;\nconst StyledCardDate = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 3px;\n  padding-left: 18px;\n`;\n_c2 = StyledCardDate;\nconst StyledTemp = styled(TempDisplay)`\n  font-size: 38px;\n  font-weight: 600;\n  padding-left: 18px;\n`;\n_c3 = StyledTemp;\nconst StyledWeatherIcon = styled(Image)`\n  width: 100px;\n  height: 100px;\n`;\n_c4 = StyledWeatherIcon;\nconst StyledDescription = styled.span`\n  font-size: 24px;\n  padding-left: 18px;\n`;\n_c5 = StyledDescription;\nexport const WeatherCard = ({\n  weather,\n  id,\n  style,\n  isLoading\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const redirectToForecast = () => id ? navigate(`/weather-forecast/${id}`) : null;\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    onClick: redirectToForecast,\n    style: style,\n    children: isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      width: \"250px\",\n      height: \"250px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(StyledCardDate, {\n        children: weather.date\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledTemp, {\n        temp: weather.temp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledWeatherIcon, {\n        src: weather.icon,\n        alt: `${weather.description} icon`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(StyledDescription, {\n        children: weather.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c6 = WeatherCard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"StyledCardDate\");\n$RefreshReg$(_c3, \"StyledTemp\");\n$RefreshReg$(_c4, \"StyledWeatherIcon\");\n$RefreshReg$(_c5, \"StyledDescription\");\n$RefreshReg$(_c6, \"WeatherCard\");","map":{"version":3,"names":["React","useNavigate","TempDisplay","Card","styled","Image","Skeleton","jsxDEV","_jsxDEV","Fragment","_Fragment","StyledCard","_c","StyledCardDate","span","_c2","StyledTemp","_c3","StyledWeatherIcon","_c4","StyledDescription","_c5","WeatherCard","weather","id","style","isLoading","_s","navigate","redirectToForecast","onClick","children","width","height","fileName","_jsxFileName","lineNumber","columnNumber","date","temp","src","icon","alt","description","_c6","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/components/WeatherCard.tsx"],"sourcesContent":["import React, { HTMLAttributes } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TempDisplay } from \"./TempDisplay\";\nimport { WeatherDisplay } from \"../store\";\nimport { Card } from \"primereact/card\";\nimport styled from \"styled-components\";\nimport { Image } from \"primereact/image\";\nimport { Skeleton } from \"primereact/skeleton\";\n\ntype WeatherCardType = {\n  id?: string;\n  weather: WeatherDisplay;\n  isLoading?: boolean;\n} & Omit<HTMLAttributes<Card>, \"\">;\n\nconst StyledCard = styled(Card)`\n  background-color: blue;\n  cursor: pointer;\n  width: 250px;\n  height: 250px;\n  color: white;\n  border-radius: 5%;\n\n  .p-card-body {\n    padding: 0;\n  }\n\n  .p-card-content {\n    display: flex;\n    flex-direction: column;\n  }\n`;\n\nconst StyledCardDate = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 3px;\n  padding-left: 18px;\n`;\n\nconst StyledTemp = styled(TempDisplay)`\n  font-size: 38px;\n  font-weight: 600;\n  padding-left: 18px;\n`;\n\nconst StyledWeatherIcon = styled(Image)`\n  width: 100px;\n  height: 100px;\n`;\n\nconst StyledDescription = styled.span`\n  font-size: 24px;\n  padding-left: 18px;\n`;\n\nexport const WeatherCard: React.FC<WeatherCardType> = ({\n  weather,\n  id,\n  style,\n  isLoading,\n}) => {\n  const navigate = useNavigate();\n  const redirectToForecast = () =>\n    id ? navigate(`/weather-forecast/${id}`) : null;\n\n  return (\n    <StyledCard onClick={redirectToForecast} style={style}>\n      {isLoading ? (\n        <Skeleton width=\"250px\" height=\"250px\" />\n      ) : (\n        <>\n          <StyledCardDate>{weather.date}</StyledCardDate>\n          <StyledTemp temp={weather.temp} />\n          <StyledWeatherIcon\n            src={weather.icon}\n            alt={`${weather.description} icon`}\n          />\n          <StyledDescription>{weather.description}</StyledDescription>\n        </>\n      )}\n    </StyledCard>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}