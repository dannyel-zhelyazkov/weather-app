{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/app/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { AppRoutes } from \"./AppRoutes\";\nimport { useAppDispatch } from \"../hooks\";\nimport { fetchWeatherAndForecast } from \"../store/weather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  useEffect(() => {\n    dispatch(fetchWeatherAndForecast());\n  });\n  useEffect(() => {\n    // Call Forecast on 3 hours to refresh the today's forecast\n    let timer = setInterval(() => {\n      dispatch(fetchWeatherAndForecast());\n    }, 1000 * 60 * 60 * 3);\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"NkhIhn1zg66j4NoEYTdniFiSz6s=\", false, function () {\n  return [useAppDispatch];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","AppRoutes","useAppDispatch","fetchWeatherAndForecast","jsxDEV","_jsxDEV","App","_s","dispatch","timer","setInterval","clearInterval","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/app/App.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { AppRoutes } from \"./AppRoutes\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { fetchWeather, fetchWeatherAndForecast } from \"../store/weather\";\n\nexport const App = () => {\n  const dispatch = useAppDispatch();\n\n  useEffect(() => {\n    dispatch(fetchWeatherAndForecast());\n  });\n\n  useEffect(() => {\n    // Call Forecast on 3 hours to refresh the today's forecast\n    let timer = setInterval(\n      () => {\n        dispatch(fetchWeatherAndForecast());\n      },\n      1000 * 60 * 60 * 3,\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return <AppRoutes />;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,cAAc,QAAwB,UAAU;AACzD,SAAuBC,uBAAuB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzE,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGN,cAAc,CAAC,CAAC;EAEjCF,SAAS,CAAC,MAAM;IACdQ,QAAQ,CAACL,uBAAuB,CAAC,CAAC,CAAC;EACrC,CAAC,CAAC;EAEFH,SAAS,CAAC,MAAM;IACd;IACA,IAAIS,KAAK,GAAGC,WAAW,CACrB,MAAM;MACJF,QAAQ,CAACL,uBAAuB,CAAC,CAAC,CAAC;IACrC,CAAC,EACD,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,CACnB,CAAC;IAED,OAAO,MAAMQ,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOJ,OAAA,CAACJ,SAAS;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB,CAAC;AAACR,EAAA,CApBWD,GAAG;EAAA,QACGJ,cAAc;AAAA;AAAAc,EAAA,GADpBV,GAAG;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}