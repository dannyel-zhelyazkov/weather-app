{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/app/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { AppRoutes } from './AppRoutes';\nimport { useAppDispatch } from '../hooks';\nimport { fetchWeather } from '../store/weather';\nimport { fetchForecast } from '../store/forecast';\nimport { MainLayout } from '../layouts';\nimport { WEATHER_METRIC_KEY } from '../common/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const units = localStorage.getItem(WEATHER_METRIC_KEY);\n  useEffect(() => {\n    dispatch(fetchWeather());\n    dispatch(fetchForecast());\n  }, [dispatch, units]);\n  return /*#__PURE__*/_jsxDEV(MainLayout, {\n    children: /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"DKdeqxp2QYw2p6z8/ErYMRK/Ubo=\", false, function () {\n  return [useAppDispatch];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","AppRoutes","useAppDispatch","fetchWeather","fetchForecast","MainLayout","WEATHER_METRIC_KEY","jsxDEV","_jsxDEV","App","_s","dispatch","units","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/app/App.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { AppRoutes } from './AppRoutes';\nimport { useAppDispatch } from '../hooks';\nimport { fetchWeather } from '../store/weather';\nimport { fetchForecast } from '../store/forecast';\nimport { MainLayout } from '../layouts';\nimport { WEATHER_METRIC_KEY } from '../common/constants';\n\nexport const App = () => {\n\tconst dispatch = useAppDispatch();\n\tconst units = localStorage.getItem(WEATHER_METRIC_KEY);\n\n\tuseEffect(() => {\n\t\tdispatch(fetchWeather());\n\t\tdispatch(fetchForecast());\n\t}, [dispatch, units]);\n\n\treturn (\n\t\t<MainLayout>\n\t\t\t<AppRoutes />\n\t\t</MainLayout>\n\t);\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,cAAc,QAAQ,UAAU;AACzC,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,SAASC,aAAa,QAAQ,mBAAmB;AACjD,SAASC,UAAU,QAAQ,YAAY;AACvC,SAASC,kBAAkB,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,QAAQ,GAAGT,cAAc,CAAC,CAAC;EACjC,MAAMU,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACR,kBAAkB,CAAC;EAEtDN,SAAS,CAAC,MAAM;IACfW,QAAQ,CAACR,YAAY,CAAC,CAAC,CAAC;IACxBQ,QAAQ,CAACP,aAAa,CAAC,CAAC,CAAC;EAC1B,CAAC,EAAE,CAACO,QAAQ,EAAEC,KAAK,CAAC,CAAC;EAErB,oBACCJ,OAAA,CAACH,UAAU;IAAAU,QAAA,eACVP,OAAA,CAACP,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEf,CAAC;AAACT,EAAA,CAdWD,GAAG;EAAA,QACEP,cAAc;AAAA;AAAAkB,EAAA,GADnBX,GAAG;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}