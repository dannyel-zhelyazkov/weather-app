{"ast":null,"code":"import { convertToMonthDay } from \"./date.util\";\nimport { parseForecastObject } from \"./index\";\nexport const convertMonthDayToId = date => date.split(\" \").join(\"-\").toLowerCase();\nexport const reduceForecastData = data => data.list.reduce((acc, current) => {\n  const key = convertToMonthDay(current.dt_txt);\n  const weatherObj = parseForecastObject(current);\n  if (!acc[key]) {\n    acc[key] = [weatherObj];\n    return acc;\n  }\n  acc[key].push(weatherObj);\n  return acc;\n}, {});\nexport const parseWeatherForecastData = data => {\n  const result = {};\n  const today = data.weatherData;\n  const todayWeather = data.weatherData.weather[0];\n  const todayKey = convertMonthDayToId(new Date().toString());\n  result[todayKey] = {\n    weather: {\n      date: convertToMonthDay(),\n      temp: Math.round(today.main.temp),\n      icon: `${process.env.REACT_APP_WEATHER_ICONS_URL}/${todayWeather.icon}@2x.png`,\n      description: todayWeather.description.charAt(0).toUpperCase() + todayWeather.description.slice(1) // make the first letter of the description upper case\n    },\n\n    forecast: []\n  };\n  return result;\n};","map":{"version":3,"names":["convertToMonthDay","parseForecastObject","convertMonthDayToId","date","split","join","toLowerCase","reduceForecastData","data","list","reduce","acc","current","key","dt_txt","weatherObj","push","parseWeatherForecastData","result","today","weatherData","todayWeather","weather","todayKey","Date","toString","temp","Math","round","main","icon","process","env","REACT_APP_WEATHER_ICONS_URL","description","charAt","toUpperCase","slice","forecast"],"sources":["/Users/maistor_dany/Projects/weather-app/src/utils/weather.util.ts"],"sourcesContent":["import { convertToMonthDay } from \"./date.util\";\nimport { ForecastResponse, WeatherResponse } from \"../api\";\nimport { ForecastDisplay, WeatherData } from \"../store\";\nimport { ForecastData } from \"../api/types\";\nimport { parseForecastObject } from \"./index\";\n\nexport const convertMonthDayToId = (date: string) =>\n  date.split(\" \").join(\"-\").toLowerCase();\n\nexport const reduceForecastData = (data: ForecastResponse) =>\n  data.list.reduce((acc: ForecastDisplay, current: ForecastData) => {\n    const key = convertToMonthDay(current.dt_txt);\n    const weatherObj = parseForecastObject(current);\n\n    if (!acc[key]) {\n      acc[key] = [weatherObj];\n\n      return acc;\n    }\n\n    acc[key].push(weatherObj);\n\n    return acc;\n  }, {});\n\nexport const parseWeatherForecastData = (data: {\n  weatherData: WeatherResponse;\n  forecastData: ForecastResponse;\n}): WeatherData => {\n  const result: WeatherData = {};\n\n  const today = data.weatherData;\n  const todayWeather = data.weatherData.weather[0];\n  const todayKey = convertMonthDayToId(new Date().toString());\n\n  result[todayKey] = {\n    weather: {\n      date: convertToMonthDay(),\n      temp: Math.round(today.main.temp),\n      icon: `${process.env.REACT_APP_WEATHER_ICONS_URL}/${todayWeather.icon}@2x.png`,\n      description:\n        todayWeather.description.charAt(0).toUpperCase() +\n        todayWeather.description.slice(1), // make the first letter of the description upper case\n    },\n    forecast: [],\n  };\n\n  return result;\n};\n"],"mappings":"AAAA,SAASA,iBAAiB,QAAQ,aAAa;AAI/C,SAASC,mBAAmB,QAAQ,SAAS;AAE7C,OAAO,MAAMC,mBAAmB,GAAIC,IAAY,IAC9CA,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC;AAEzC,OAAO,MAAMC,kBAAkB,GAAIC,IAAsB,IACvDA,IAAI,CAACC,IAAI,CAACC,MAAM,CAAC,CAACC,GAAoB,EAAEC,OAAqB,KAAK;EAChE,MAAMC,GAAG,GAAGb,iBAAiB,CAACY,OAAO,CAACE,MAAM,CAAC;EAC7C,MAAMC,UAAU,GAAGd,mBAAmB,CAACW,OAAO,CAAC;EAE/C,IAAI,CAACD,GAAG,CAACE,GAAG,CAAC,EAAE;IACbF,GAAG,CAACE,GAAG,CAAC,GAAG,CAACE,UAAU,CAAC;IAEvB,OAAOJ,GAAG;EACZ;EAEAA,GAAG,CAACE,GAAG,CAAC,CAACG,IAAI,CAACD,UAAU,CAAC;EAEzB,OAAOJ,GAAG;AACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AAER,OAAO,MAAMM,wBAAwB,GAAIT,IAGxC,IAAkB;EACjB,MAAMU,MAAmB,GAAG,CAAC,CAAC;EAE9B,MAAMC,KAAK,GAAGX,IAAI,CAACY,WAAW;EAC9B,MAAMC,YAAY,GAAGb,IAAI,CAACY,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC;EAChD,MAAMC,QAAQ,GAAGrB,mBAAmB,CAAC,IAAIsB,IAAI,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;EAE3DP,MAAM,CAACK,QAAQ,CAAC,GAAG;IACjBD,OAAO,EAAE;MACPnB,IAAI,EAAEH,iBAAiB,CAAC,CAAC;MACzB0B,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACT,KAAK,CAACU,IAAI,CAACH,IAAI,CAAC;MACjCI,IAAI,EAAG,GAAEC,OAAO,CAACC,GAAG,CAACC,2BAA4B,IAAGZ,YAAY,CAACS,IAAK,SAAQ;MAC9EI,WAAW,EACTb,YAAY,CAACa,WAAW,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAChDf,YAAY,CAACa,WAAW,CAACG,KAAK,CAAC,CAAC,CAAC,CAAE;IACvC,CAAC;;IACDC,QAAQ,EAAE;EACZ,CAAC;EAED,OAAOpB,MAAM;AACf,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}