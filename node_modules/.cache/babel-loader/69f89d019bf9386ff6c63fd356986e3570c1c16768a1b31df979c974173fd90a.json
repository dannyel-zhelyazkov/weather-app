{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/components/TempDisplay.tsx\";\nimport React from 'react';\nimport { CELSIUS_SYMBOL, FAHRENHEIT_SYMBOL, IMPERIAL_UNIT, KELVIN_SYMBOL, METRIC_UNIT, STANDARD_UNIT, WEATHER_METRIC_KEY } from '../common/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst unitToSymbol = {\n  [STANDARD_UNIT]: KELVIN_SYMBOL,\n  [METRIC_UNIT]: CELSIUS_SYMBOL,\n  [IMPERIAL_UNIT]: FAHRENHEIT_SYMBOL\n};\nexport const TempDisplay = ({\n  temp,\n  className,\n  isLoading\n}) => {\n  const unit = localStorage.getItem(WEATHER_METRIC_KEY) || KELVIN_SYMBOL;\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    children: isLoading ? '--' : `${temp}&deg;${unitToSymbol[unit]}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_c = TempDisplay;\nvar _c;\n$RefreshReg$(_c, \"TempDisplay\");","map":{"version":3,"names":["React","CELSIUS_SYMBOL","FAHRENHEIT_SYMBOL","IMPERIAL_UNIT","KELVIN_SYMBOL","METRIC_UNIT","STANDARD_UNIT","WEATHER_METRIC_KEY","jsxDEV","_jsxDEV","unitToSymbol","TempDisplay","temp","className","isLoading","unit","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/components/TempDisplay.tsx"],"sourcesContent":["import React, { HTMLAttributes } from 'react';\nimport {\n\tCELSIUS_SYMBOL,\n\tFAHRENHEIT_SYMBOL,\n\tIMPERIAL_UNIT,\n\tKELVIN_SYMBOL,\n\tMETRIC_UNIT,\n\tSTANDARD_UNIT,\n\tWEATHER_METRIC_KEY,\n} from '../common/constants';\n\nconst unitToSymbol: { [key: string]: string } = {\n\t[STANDARD_UNIT]: KELVIN_SYMBOL,\n\t[METRIC_UNIT]: CELSIUS_SYMBOL,\n\t[IMPERIAL_UNIT]: FAHRENHEIT_SYMBOL,\n};\n\ntype TempDisplayProps = { temp: number; isLoading: boolean } & Omit<\n\tHTMLAttributes<HTMLSpanElement>,\n\t''\n>;\nexport const TempDisplay: React.FC<TempDisplayProps> = ({\n\ttemp,\n\tclassName,\n\tisLoading\n}) => {\n\tconst unit = localStorage.getItem(WEATHER_METRIC_KEY) || KELVIN_SYMBOL;\n\n\treturn (\n\t\t<span className={className}>\n\t\t\t{isLoading ? '--' : `${temp}&deg;${unitToSymbol[unit]}`}\n\t\t</span>\n\t);\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAA0B,OAAO;AAC7C,SACCC,cAAc,EACdC,iBAAiB,EACjBC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,aAAa,EACbC,kBAAkB,QACZ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,YAAuC,GAAG;EAC/C,CAACJ,aAAa,GAAGF,aAAa;EAC9B,CAACC,WAAW,GAAGJ,cAAc;EAC7B,CAACE,aAAa,GAAGD;AAClB,CAAC;AAMD,OAAO,MAAMS,WAAuC,GAAGA,CAAC;EACvDC,IAAI;EACJC,SAAS;EACTC;AACD,CAAC,KAAK;EACL,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAACV,kBAAkB,CAAC,IAAIH,aAAa;EAEtE,oBACCK,OAAA;IAAMI,SAAS,EAAEA,SAAU;IAAAK,QAAA,EACzBJ,SAAS,GAAG,IAAI,GAAI,GAAEF,IAAK,QAAOF,YAAY,CAACK,IAAI,CAAE;EAAC;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClD,CAAC;AAET,CAAC;AAACC,EAAA,GAZWZ,WAAuC;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}