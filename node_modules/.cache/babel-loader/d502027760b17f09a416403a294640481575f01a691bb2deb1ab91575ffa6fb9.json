{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/components/MetricSystemSelector.tsx\";\nimport React from 'react';\nimport { IMPERIAL_UNIT, METRIC_UNIT, STANDARD_UNIT, WEATHER_METRIC_KEY } from '../common/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MetricSystemSelector = () => {\n  const currentUnit = localStorage.getItem(WEATHER_METRIC_KEY) || STANDARD_UNIT;\n  const handleSelectMetric = event => {\n    const target = event.target;\n    localStorage.setItem(WEATHER_METRIC_KEY, target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    defaultValue: currentUnit,\n    onChange: handleSelectMetric,\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: STANDARD_UNIT,\n      children: \"Kelvin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: METRIC_UNIT,\n      children: \"Celsius\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n      value: IMPERIAL_UNIT,\n      children: \"Fahrenheit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 3\n  }, this);\n};\n_c = MetricSystemSelector;\nvar _c;\n$RefreshReg$(_c, \"MetricSystemSelector\");","map":{"version":3,"names":["React","IMPERIAL_UNIT","METRIC_UNIT","STANDARD_UNIT","WEATHER_METRIC_KEY","jsxDEV","_jsxDEV","MetricSystemSelector","currentUnit","localStorage","getItem","handleSelectMetric","event","target","setItem","value","defaultValue","onChange","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/components/MetricSystemSelector.tsx"],"sourcesContent":["import React, { SyntheticEvent } from 'react';\nimport {\n\tIMPERIAL_UNIT,\n\tMETRIC_UNIT,\n\tSTANDARD_UNIT,\n\tWEATHER_METRIC_KEY,\n} from '../common/constants';\n\nexport const MetricSystemSelector: React.FC = () => {\n\tconst currentUnit = localStorage.getItem(WEATHER_METRIC_KEY) || STANDARD_UNIT;\n\tconst handleSelectMetric = (event: SyntheticEvent<HTMLSelectElement>) => {\n\t\tconst target = event.target as HTMLSelectElement;\n\t\tlocalStorage.setItem(WEATHER_METRIC_KEY, target.value);\n\t};\n\n\treturn (\n\t\t<select defaultValue={currentUnit} onChange={handleSelectMetric}>\n\t\t\t<option value={STANDARD_UNIT}>Kelvin</option>\n\t\t\t<option value={METRIC_UNIT}>Celsius</option>\n\t\t\t<option value={IMPERIAL_UNIT}>Fahrenheit</option>\n\t\t</select>\n\t);\n};\n"],"mappings":";AAAA,OAAOA,KAAK,MAA0B,OAAO;AAC7C,SACCC,aAAa,EACbC,WAAW,EACXC,aAAa,EACbC,kBAAkB,QACZ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,OAAO,MAAMC,oBAA8B,GAAGA,CAAA,KAAM;EACnD,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAACN,kBAAkB,CAAC,IAAID,aAAa;EAC7E,MAAMQ,kBAAkB,GAAIC,KAAwC,IAAK;IACxE,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAA2B;IAChDJ,YAAY,CAACK,OAAO,CAACV,kBAAkB,EAAES,MAAM,CAACE,KAAK,CAAC;EACvD,CAAC;EAED,oBACCT,OAAA;IAAQU,YAAY,EAAER,WAAY;IAACS,QAAQ,EAAEN,kBAAmB;IAAAO,QAAA,gBAC/DZ,OAAA;MAAQS,KAAK,EAAEZ,aAAc;MAAAe,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7ChB,OAAA;MAAQS,KAAK,EAAEb,WAAY;MAAAgB,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC5ChB,OAAA;MAAQS,KAAK,EAAEd,aAAc;MAAAiB,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1C,CAAC;AAEX,CAAC;AAACC,EAAA,GAdWhB,oBAA8B;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}