{"ast":null,"code":"import { client } from \"../client\";\nexport const weatherService = () => {\n  const WEATHER_URL = data => `weatherasd?lat=${data.lat}&lon=${data.lon}&units=${data.units}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\n  const getWeather = async request => {\n    try {\n      const result = await client.get(WEATHER_URL(request));\n      return result.data;\n    } catch (e) {\n      throw new Error(e.message);\n    }\n  };\n  return {\n    getWeather\n  };\n};","map":{"version":3,"names":["client","weatherService","WEATHER_URL","data","lat","lon","units","process","env","REACT_APP_WEATHER_API_KEY","getWeather","request","result","get","e","Error","message"],"sources":["/Users/maistor_dany/Projects/weather-app/src/api/weather.service.ts"],"sourcesContent":["import { client } from \"../client\";\nimport { WeatherRequest, WeatherResponse } from \"./types\";\nimport { AxiosError, AxiosResponse } from \"axios\";\n\nexport const weatherService = () => {\n  const WEATHER_URL = (data: WeatherRequest) =>\n    `weatherasd?lat=${data.lat}&lon=${data.lon}&units=${data.units}&appid=${process.env.REACT_APP_WEATHER_API_KEY}`;\n  const getWeather = async (\n    request: WeatherRequest,\n  ): Promise<WeatherResponse> => {\n    try {\n      const result = await client.get<\n        WeatherResponse,\n        AxiosResponse<WeatherResponse>\n      >(WEATHER_URL(request));\n\n      return result.data;\n    } catch (e) {\n      throw new Error((e as AxiosError).message);\n    }\n  };\n\n  return { getWeather };\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,WAAW;AAIlC,OAAO,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAClC,MAAMC,WAAW,GAAIC,IAAoB,IACtC,kBAAiBA,IAAI,CAACC,GAAI,QAAOD,IAAI,CAACE,GAAI,UAASF,IAAI,CAACG,KAAM,UAASC,OAAO,CAACC,GAAG,CAACC,yBAA0B,EAAC;EACjH,MAAMC,UAAU,GAAG,MACjBC,OAAuB,IACM;IAC7B,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMZ,MAAM,CAACa,GAAG,CAG7BX,WAAW,CAACS,OAAO,CAAC,CAAC;MAEvB,OAAOC,MAAM,CAACT,IAAI;IACpB,CAAC,CAAC,OAAOW,CAAC,EAAE;MACV,MAAM,IAAIC,KAAK,CAAED,CAAC,CAAgBE,OAAO,CAAC;IAC5C;EACF,CAAC;EAED,OAAO;IAAEN;EAAW,CAAC;AACvB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}