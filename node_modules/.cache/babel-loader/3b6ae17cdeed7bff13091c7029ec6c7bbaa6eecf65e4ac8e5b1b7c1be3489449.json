{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/pages/ForecastPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { WeatherCard } from \"../components\";\nimport { useAppSelector } from \"../hooks\";\nimport { ForecastTable } from \"../components\";\nimport styles from \"../styles/pages/forecast-page.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ForecastPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const selectedDayForecast = useAppSelector(state => state.weather.weather[id]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: [selectedDayForecast === null || selectedDayForecast === void 0 ? void 0 : selectedDayForecast.weather.date, \" 3 Hours Forecast\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      style: {\n        marginBottom: \"12px\"\n      },\n      weather: selectedDayForecast.weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForecastTable, {\n      forecast: selectedDayForecast.forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ForecastPage, \"O8InXUMEzNOJAzgvsG0Vtb2RdEU=\", false, function () {\n  return [useParams, useAppSelector];\n});\n_c = ForecastPage;\nvar _c;\n$RefreshReg$(_c, \"ForecastPage\");","map":{"version":3,"names":["React","useParams","WeatherCard","useAppSelector","ForecastTable","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","ForecastPage","_s","id","selectedDayForecast","state","weather","children","className","title","date","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","forecast","_c","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/pages/ForecastPage.tsx"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { WeatherCard } from \"../components\";\nimport { useAppSelector } from \"../hooks\";\nimport { ForecastTable } from \"../components\";\nimport styles from \"../styles/pages/forecast-page.module.scss\";\nexport const ForecastPage: React.FC = () => {\n  const { id } = useParams();\n  const selectedDayForecast = useAppSelector(\n    (state) => state.weather.weather[id as string],\n  );\n\n  return (\n    <>\n      <h1 className={styles.title}>\n        {selectedDayForecast?.weather.date} 3 Hours Forecast\n      </h1>\n      <WeatherCard\n        style={{ marginBottom: \"12px\" }}\n        weather={selectedDayForecast.weather}\n      />\n      <ForecastTable forecast={selectedDayForecast.forecast} />\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,cAAc,QAAQ,UAAU;AACzC,SAASC,aAAa,QAAQ,eAAe;AAC7C,OAAOC,MAAM,MAAM,2CAA2C;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC/D,OAAO,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1C,MAAM;IAAEC;EAAG,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAMY,mBAAmB,GAAGV,cAAc,CACvCW,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACA,OAAO,CAACH,EAAE,CACrC,CAAC;EAED,oBACEL,OAAA,CAAAE,SAAA;IAAAO,QAAA,gBACET,OAAA;MAAIU,SAAS,EAAEZ,MAAM,CAACa,KAAM;MAAAF,QAAA,GACzBH,mBAAmB,aAAnBA,mBAAmB,uBAAnBA,mBAAmB,CAAEE,OAAO,CAACI,IAAI,EAAC,mBACrC;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLhB,OAAA,CAACL,WAAW;MACVsB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAChCV,OAAO,EAAEF,mBAAmB,CAACE;IAAQ;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFhB,OAAA,CAACH,aAAa;MAACsB,QAAQ,EAAEb,mBAAmB,CAACa;IAAS;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACzD,CAAC;AAEP,CAAC;AAACZ,EAAA,CAlBWD,YAAsB;EAAA,QAClBT,SAAS,EACIE,cAAc;AAAA;AAAAwB,EAAA,GAF/BjB,YAAsB;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}