{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/components/WeatherCard.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TempDisplay } from \"./TempDisplay\";\nimport styled from \"styled-components\";\nimport { Image } from \"primereact/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledCard = styled.div`\n  background-color: blue;\n  cursor: pointer;\n  width: 250px;\n  height: 250px;\n  color: white;\n  border-radius: 5%;\n\n  padding: 0;\n  //&.p-card-body {\n  //}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  //&.p-card-content {\n  //\n  //}\n`;\n_c = StyledCard;\nconst StyledCardDate = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 3px;\n  padding-left: 18px;\n`;\n_c2 = StyledCardDate;\nconst StyledTemp = styled(TempDisplay)`\n  font-size: 38px;\n  font-weight: 600;\n  padding-left: 18px;\n`;\n_c3 = StyledTemp;\nconst StyledWeatherIcon = styled(Image)`\n  width: 100px;\n  height: 100px;\n`;\n_c4 = StyledWeatherIcon;\nconst StyledDescription = styled.span`\n  font-size: 24px;\n  padding-left: 18px;\n`;\n_c5 = StyledDescription;\nexport const WeatherCard = ({\n  weather,\n  id,\n  style,\n  isLoading\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const redirectToForecast = () => id ? navigate(`/weather-forecast/${id}`) : null;\n  return /*#__PURE__*/_jsxDEV(StyledCard, {\n    \"data-testid\": \"weather-card\",\n    onClick: redirectToForecast,\n    style: style,\n    children: [/*#__PURE__*/_jsxDEV(StyledCardDate, {\n      \"data-testid\": \"weather-card-date\",\n      children: weather.date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTemp, {\n      temp: weather.temp\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledWeatherIcon, {\n      \"data-testid\": \"weather-card-icon\",\n      src: weather.icon,\n      alt: `${weather.description} icon`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledDescription, {\n      \"data-testid\": \"weather-card-description\",\n      children: weather.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(WeatherCard, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c6 = WeatherCard;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"StyledCard\");\n$RefreshReg$(_c2, \"StyledCardDate\");\n$RefreshReg$(_c3, \"StyledTemp\");\n$RefreshReg$(_c4, \"StyledWeatherIcon\");\n$RefreshReg$(_c5, \"StyledDescription\");\n$RefreshReg$(_c6, \"WeatherCard\");","map":{"version":3,"names":["React","useNavigate","TempDisplay","styled","Image","jsxDEV","_jsxDEV","StyledCard","div","_c","StyledCardDate","span","_c2","StyledTemp","_c3","StyledWeatherIcon","_c4","StyledDescription","_c5","WeatherCard","weather","id","style","isLoading","_s","navigate","redirectToForecast","onClick","children","date","fileName","_jsxFileName","lineNumber","columnNumber","temp","src","icon","alt","description","_c6","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/components/WeatherCard.tsx"],"sourcesContent":["import React, { HTMLAttributes } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { TempDisplay } from \"./TempDisplay\";\nimport { WeatherDisplay } from \"../store\";\nimport { Card } from \"primereact/card\";\nimport styled from \"styled-components\";\nimport { Image } from \"primereact/image\";\n\ntype WeatherCardType = {\n  id?: string;\n  weather: WeatherDisplay;\n  isLoading?: boolean;\n} & Omit<HTMLAttributes<Card>, \"\">;\n\nconst StyledCard = styled.div`\n  background-color: blue;\n  cursor: pointer;\n  width: 250px;\n  height: 250px;\n  color: white;\n  border-radius: 5%;\n\n  padding: 0;\n  //&.p-card-body {\n  //}\n\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  //&.p-card-content {\n  //\n  //}\n`;\n\nconst StyledCardDate = styled.span`\n  font-size: 18px;\n  font-weight: 500;\n  margin-bottom: 3px;\n  padding-left: 18px;\n`;\n\nconst StyledTemp = styled(TempDisplay)`\n  font-size: 38px;\n  font-weight: 600;\n  padding-left: 18px;\n`;\n\nconst StyledWeatherIcon = styled(Image)`\n  width: 100px;\n  height: 100px;\n`;\n\nconst StyledDescription = styled.span`\n  font-size: 24px;\n  padding-left: 18px;\n`;\n\nexport const WeatherCard: React.FC<WeatherCardType> = ({\n  weather,\n  id,\n  style,\n  isLoading,\n}) => {\n  const navigate = useNavigate();\n  const redirectToForecast = () =>\n    id ? navigate(`/weather-forecast/${id}`) : null;\n\n  return (\n    <StyledCard\n      data-testid=\"weather-card\"\n      onClick={redirectToForecast}\n      style={style}\n    >\n      <StyledCardDate data-testid=\"weather-card-date\">\n        {weather.date}\n      </StyledCardDate>\n      <StyledTemp temp={weather.temp} />\n      <StyledWeatherIcon\n        data-testid=\"weather-card-icon\"\n        src={weather.icon}\n        alt={`${weather.description} icon`}\n      />\n      <StyledDescription data-testid=\"weather-card-description\">\n        {weather.description}\n      </StyledDescription>\n    </StyledCard>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAA0B,OAAO;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,eAAe;AAG3C,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQzC,MAAMC,UAAU,GAAGJ,MAAM,CAACK,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GAnBIF,UAAU;AAqBhB,MAAMG,cAAc,GAAGP,MAAM,CAACQ,IAAK;AACnC;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GALIF,cAAc;AAOpB,MAAMG,UAAU,GAAGV,MAAM,CAACD,WAAW,CAAE;AACvC;AACA;AACA;AACA,CAAC;AAACY,GAAA,GAJID,UAAU;AAMhB,MAAME,iBAAiB,GAAGZ,MAAM,CAACC,KAAK,CAAE;AACxC;AACA;AACA,CAAC;AAACY,GAAA,GAHID,iBAAiB;AAKvB,MAAME,iBAAiB,GAAGd,MAAM,CAACQ,IAAK;AACtC;AACA;AACA,CAAC;AAACO,GAAA,GAHID,iBAAiB;AAKvB,OAAO,MAAME,WAAsC,GAAGA,CAAC;EACrDC,OAAO;EACPC,EAAE;EACFC,KAAK;EACLC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,QAAQ,GAAGxB,WAAW,CAAC,CAAC;EAC9B,MAAMyB,kBAAkB,GAAGA,CAAA,KACzBL,EAAE,GAAGI,QAAQ,CAAE,qBAAoBJ,EAAG,EAAC,CAAC,GAAG,IAAI;EAEjD,oBACEf,OAAA,CAACC,UAAU;IACT,eAAY,cAAc;IAC1BoB,OAAO,EAAED,kBAAmB;IAC5BJ,KAAK,EAAEA,KAAM;IAAAM,QAAA,gBAEbtB,OAAA,CAACI,cAAc;MAAC,eAAY,mBAAmB;MAAAkB,QAAA,EAC5CR,OAAO,CAACS;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACjB3B,OAAA,CAACO,UAAU;MAACqB,IAAI,EAAEd,OAAO,CAACc;IAAK;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClC3B,OAAA,CAACS,iBAAiB;MAChB,eAAY,mBAAmB;MAC/BoB,GAAG,EAAEf,OAAO,CAACgB,IAAK;MAClBC,GAAG,EAAG,GAAEjB,OAAO,CAACkB,WAAY;IAAO;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACF3B,OAAA,CAACW,iBAAiB;MAAC,eAAY,0BAA0B;MAAAW,QAAA,EACtDR,OAAO,CAACkB;IAAW;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEjB,CAAC;AAACT,EAAA,CA9BWL,WAAsC;EAAA,QAMhClB,WAAW;AAAA;AAAAsC,GAAA,GANjBpB,WAAsC;AAAA,IAAAV,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAE,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAA/B,EAAA;AAAA+B,YAAA,CAAA5B,GAAA;AAAA4B,YAAA,CAAA1B,GAAA;AAAA0B,YAAA,CAAAxB,GAAA;AAAAwB,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}