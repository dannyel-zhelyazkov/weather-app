{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/app/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { AppRoutes } from \"./AppRoutes\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { fetchWeatherAndForecast } from \"../store/weather\";\nimport { Toast } from \"primereact/toast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const units = useAppSelector(state => state.weather.units);\n  const toastTL = useRef();\n  useEffect(() => {\n    dispatch(fetchWeatherAndForecast());\n  }, [units]);\n  useEffect(() => {\n    // Call Forecast on 3 hours to refresh the today's forecast\n    let timer = setInterval(() => {\n      dispatch(fetchWeatherAndForecast());\n    }, 1000 * 60 * 60 * 3);\n    return () => clearInterval(timer);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Toast, {\n      ref: toastTL,\n      position: \"top-left\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true);\n};\n_s(App, \"TOGdvkk/gHCiw74jkHmEvA9+qTI=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","AppRoutes","useAppDispatch","useAppSelector","fetchWeatherAndForecast","Toast","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","dispatch","units","state","weather","toastTL","timer","setInterval","clearInterval","children","ref","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/app/App.tsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport { AppRoutes } from \"./AppRoutes\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { fetchWeather, fetchWeatherAndForecast } from \"../store/weather\";\nimport { Toast } from \"primereact/toast\";\n\nexport const App = () => {\n  const dispatch = useAppDispatch();\n  const units = useAppSelector((state) => state.weather.units);\n  const toastTL = useRef<any>();\n\n  useEffect(() => {\n    dispatch(fetchWeatherAndForecast());\n  }, [units]);\n\n  useEffect(() => {\n    // Call Forecast on 3 hours to refresh the today's forecast\n    let timer = setInterval(\n      () => {\n        dispatch(fetchWeatherAndForecast());\n      },\n      1000 * 60 * 60 * 3,\n    );\n\n    return () => clearInterval(timer);\n  }, []);\n\n  return (\n    <>\n      <Toast ref={toastTL} position=\"top-left\" />\n      <AppRoutes />;\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,cAAc,EAAEC,cAAc,QAAQ,UAAU;AACzD,SAAuBC,uBAAuB,QAAQ,kBAAkB;AACxE,SAASC,KAAK,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzC,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGV,cAAc,CAAC,CAAC;EACjC,MAAMW,KAAK,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC;EAC5D,MAAMG,OAAO,GAAGhB,MAAM,CAAM,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACda,QAAQ,CAACR,uBAAuB,CAAC,CAAC,CAAC;EACrC,CAAC,EAAE,CAACS,KAAK,CAAC,CAAC;EAEXd,SAAS,CAAC,MAAM;IACd;IACA,IAAIkB,KAAK,GAAGC,WAAW,CACrB,MAAM;MACJN,QAAQ,CAACR,uBAAuB,CAAC,CAAC,CAAC;IACrC,CAAC,EACD,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,CACnB,CAAC;IAED,OAAO,MAAMe,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEV,OAAA,CAAAE,SAAA;IAAAW,QAAA,gBACEb,OAAA,CAACF,KAAK;MAACgB,GAAG,EAAEL,OAAQ;MAACM,QAAQ,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3CnB,OAAA,CAACN,SAAS;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KACf;EAAA,eAAE,CAAC;AAEP,CAAC;AAACf,EAAA,CA3BWD,GAAG;EAAA,QACGR,cAAc,EACjBC,cAAc;AAAA;AAAAwB,EAAA,GAFjBjB,GAAG;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}