{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/pages/DaysWeatherPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAppSelector } from \"../hooks\";\nimport { WeatherCard } from \"../components\";\nimport styled from \"styled-components\";\nimport { Skeleton } from \"primereact/skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n_c = StyledPageContainer;\nconst StyledTitle = styled.h1`\n  font-size: 62px;\n  margin-bottom: 5rem;\n  text-align: center;\n`;\n_c2 = StyledTitle;\nconst StyledWeathersContainer = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  padding: 12px;\n\n  & > div {\n    align-self: center;\n    margin-right: 5rem;\n    margin-bottom: 5rem;\n  }\n\n  @media (max-width: 992px) {\n    flex-direction: column;\n\n    & > div {\n      margin-right: 0;\n    }\n  }\n`;\n_c3 = StyledWeathersContainer;\nexport const DaysWeatherPage = () => {\n  _s();\n  const isLoading = useAppSelector(state => state.weather.isLoading);\n  const daysWeather = useAppSelector(state => state.weather.weather);\n  const locationName = useAppSelector(state => state.weather.locationName);\n  const weatherTemplate = () => Object.entries(daysWeather).map(([id, {\n    weather\n  }]) => /*#__PURE__*/_jsxDEV(WeatherCard, {\n    isLoading: isLoading,\n    id: id,\n    weather: weather\n  }, id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this));\n  const loadingTemplate = () => Array(5).fill(\"data\").map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"loading-weather-card\",\n    style: {\n      width: \"250px\",\n      height: \"250px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n      height: \"250px\",\n      width: \"250px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }, this)\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(StyledPageContainer, {\n    children: [/*#__PURE__*/_jsxDEV(StyledTitle, {\n      \"data-testid\": \"weather-title\",\n      children: [locationName, \" 5 Days Weather\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledWeathersContainer, {\n      children: isLoading ? loadingTemplate() : weatherTemplate()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(DaysWeatherPage, \"+7ynBYtOhWWspBXPnTnLqG8pnsg=\", false, function () {\n  return [useAppSelector, useAppSelector, useAppSelector];\n});\n_c4 = DaysWeatherPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"StyledPageContainer\");\n$RefreshReg$(_c2, \"StyledTitle\");\n$RefreshReg$(_c3, \"StyledWeathersContainer\");\n$RefreshReg$(_c4, \"DaysWeatherPage\");","map":{"version":3,"names":["React","useAppSelector","WeatherCard","styled","Skeleton","jsxDEV","_jsxDEV","StyledPageContainer","div","_c","StyledTitle","h1","_c2","StyledWeathersContainer","_c3","DaysWeatherPage","_s","isLoading","state","weather","daysWeather","locationName","weatherTemplate","Object","entries","map","id","fileName","_jsxFileName","lineNumber","columnNumber","loadingTemplate","Array","fill","_","index","style","width","height","children","_c4","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/pages/DaysWeatherPage.tsx"],"sourcesContent":["import React from \"react\";\nimport { useAppSelector } from \"../hooks\";\nimport { WeatherCard } from \"../components\";\nimport styled from \"styled-components\";\nimport { Skeleton } from \"primereact/skeleton\";\n\nconst StyledPageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n`;\n\nconst StyledTitle = styled.h1`\n  font-size: 62px;\n  margin-bottom: 5rem;\n  text-align: center;\n`;\n\nconst StyledWeathersContainer = styled.div`\n  width: 100vw;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-start;\n  flex-wrap: wrap;\n  padding: 12px;\n\n  & > div {\n    align-self: center;\n    margin-right: 5rem;\n    margin-bottom: 5rem;\n  }\n\n  @media (max-width: 992px) {\n    flex-direction: column;\n\n    & > div {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const DaysWeatherPage = () => {\n  const isLoading = useAppSelector((state) => state.weather.isLoading);\n  const daysWeather = useAppSelector((state) => state.weather.weather);\n  const locationName = useAppSelector((state) => state.weather.locationName);\n  const weatherTemplate = () =>\n    Object.entries(daysWeather).map(([id, { weather }]) => (\n      <WeatherCard isLoading={isLoading} key={id} id={id} weather={weather} />\n    ));\n\n  const loadingTemplate = () =>\n    Array(5)\n      .fill(\"data\")\n      .map((_, index) => (\n        <div\n          data-testid=\"loading-weather-card\"\n          key={index}\n          style={{ width: \"250px\", height: \"250px\" }}\n        >\n          <Skeleton height=\"250px\" width=\"250px\" />\n        </div>\n      ));\n\n  return (\n    <StyledPageContainer>\n      <StyledTitle data-testid=\"weather-title\">\n        {locationName} 5 Days Weather\n      </StyledTitle>\n      <StyledWeathersContainer>\n        {isLoading ? loadingTemplate() : weatherTemplate()}\n      </StyledWeathersContainer>\n    </StyledPageContainer>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}