{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/app/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { AppRoutes } from \"./AppRoutes\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { fetchWeather } from \"../store/weather\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const App = () => {\n  _s();\n  const dispatch = useAppDispatch();\n  const units = useAppSelector(state => state.weather.units);\n  useEffect(() => {\n    dispatch(fetchWeather());\n\n    // Call Forecast on 3 hours to refresh the todays forecast\n    let timer = setInterval(() => {\n      dispatch(fetchWeather());\n    }, 1000 * 60 * 3);\n    return () => clearInterval(timer);\n  }, [dispatch, units]);\n  return /*#__PURE__*/_jsxDEV(AppRoutes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"ervIFNTmpnwOawvLuqz9i8wN1QA=\", false, function () {\n  return [useAppDispatch, useAppSelector];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","AppRoutes","useAppDispatch","useAppSelector","fetchWeather","jsxDEV","_jsxDEV","App","_s","dispatch","units","state","weather","timer","setInterval","clearInterval","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/app/App.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { AppRoutes } from \"./AppRoutes\";\nimport { useAppDispatch, useAppSelector } from \"../hooks\";\nimport { fetchWeather } from \"../store/weather\";\n\nexport const App = () => {\n  const dispatch = useAppDispatch();\n  const units = useAppSelector((state) => state.weather.units);\n\n  useEffect(() => {\n    dispatch(fetchWeather());\n\n    // Call Forecast on 3 hours to refresh the todays forecast\n    let timer = setInterval(\n      () => {\n        dispatch(fetchWeather());\n      },\n      1000 * 60 * 3,\n    );\n\n    return () => clearInterval(timer);\n  }, [dispatch, units]);\n\n  return <AppRoutes />;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,SAAS,QAAQ,aAAa;AACvC,SAASC,cAAc,EAAEC,cAAc,QAAQ,UAAU;AACzD,SAASC,YAAY,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,QAAQ,GAAGP,cAAc,CAAC,CAAC;EACjC,MAAMQ,KAAK,GAAGP,cAAc,CAAEQ,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC;EAE5DV,SAAS,CAAC,MAAM;IACdS,QAAQ,CAACL,YAAY,CAAC,CAAC,CAAC;;IAExB;IACA,IAAIS,KAAK,GAAGC,WAAW,CACrB,MAAM;MACJL,QAAQ,CAACL,YAAY,CAAC,CAAC,CAAC;IAC1B,CAAC,EACD,IAAI,GAAG,EAAE,GAAG,CACd,CAAC;IAED,OAAO,MAAMW,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,CAACJ,QAAQ,EAAEC,KAAK,CAAC,CAAC;EAErB,oBAAOJ,OAAA,CAACL,SAAS;IAAAe,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB,CAAC;AAACX,EAAA,CAnBWD,GAAG;EAAA,QACGL,cAAc,EACjBC,cAAc;AAAA;AAAAiB,EAAA,GAFjBb,GAAG;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}