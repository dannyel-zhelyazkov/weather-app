{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/components/TempDisplay.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { CELSIUS_SYMBOL, FAHRENHEIT_SYMBOL, IMPERIAL_UNIT, KELVIN_SYMBOL, METRIC_UNIT, STANDARD_UNIT } from \"../common/constants\";\nimport { useAppSelector } from \"../hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst unitToSymbol = {\n  [STANDARD_UNIT]: KELVIN_SYMBOL,\n  [METRIC_UNIT]: CELSIUS_SYMBOL,\n  [IMPERIAL_UNIT]: FAHRENHEIT_SYMBOL\n};\nexport const TempDisplay = ({\n  temp,\n  className\n}) => {\n  _s();\n  const unit = useAppSelector(state => state.weather.units);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: className,\n    children: [\"--\\xB0\", unitToSymbol[unit]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(TempDisplay, \"13IxuPJ7lEiy5QbMcqZOWXK4tbg=\", false, function () {\n  return [useAppSelector];\n});\n_c = TempDisplay;\nvar _c;\n$RefreshReg$(_c, \"TempDisplay\");","map":{"version":3,"names":["React","CELSIUS_SYMBOL","FAHRENHEIT_SYMBOL","IMPERIAL_UNIT","KELVIN_SYMBOL","METRIC_UNIT","STANDARD_UNIT","useAppSelector","jsxDEV","_jsxDEV","unitToSymbol","TempDisplay","temp","className","_s","unit","state","weather","units","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/components/TempDisplay.tsx"],"sourcesContent":["import React, { HTMLAttributes } from \"react\";\nimport {\n  CELSIUS_SYMBOL,\n  FAHRENHEIT_SYMBOL,\n  IMPERIAL_UNIT,\n  KELVIN_SYMBOL,\n  METRIC_UNIT,\n  STANDARD_UNIT,\n} from \"../common/constants\";\nimport { useAppSelector } from \"../hooks\";\n\nconst unitToSymbol: { [key: string]: string } = {\n  [STANDARD_UNIT]: KELVIN_SYMBOL,\n  [METRIC_UNIT]: CELSIUS_SYMBOL,\n  [IMPERIAL_UNIT]: FAHRENHEIT_SYMBOL,\n};\n\ntype TempDisplayProps = { temp: number } & Omit<\n  HTMLAttributes<HTMLSpanElement>,\n  \"\"\n>;\nexport const TempDisplay: React.FC<TempDisplayProps> = ({\n  temp,\n  className,\n}) => {\n  const unit = useAppSelector((state) => state.weather.units);\n\n  return (\n    <span className={className}>\n      --&deg;{unitToSymbol[unit]}\n      {/*{temp}&deg;{unitToSymbol[unit]}*/}\n    </span>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAA0B,OAAO;AAC7C,SACEC,cAAc,EACdC,iBAAiB,EACjBC,aAAa,EACbC,aAAa,EACbC,WAAW,EACXC,aAAa,QACR,qBAAqB;AAC5B,SAASC,cAAc,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAuC,GAAG;EAC9C,CAACJ,aAAa,GAAGF,aAAa;EAC9B,CAACC,WAAW,GAAGJ,cAAc;EAC7B,CAACE,aAAa,GAAGD;AACnB,CAAC;AAMD,OAAO,MAAMS,WAAuC,GAAGA,CAAC;EACtDC,IAAI;EACJC;AACF,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,IAAI,GAAGR,cAAc,CAAES,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;EAE3D,oBACET,OAAA;IAAMI,SAAS,EAAEA,SAAU;IAAAM,QAAA,GAAC,QACnB,EAACT,YAAY,CAACK,IAAI,CAAC;EAAA;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtB,CAAC;AAEX,CAAC;AAACT,EAAA,CAZWH,WAAuC;EAAA,QAIrCJ,cAAc;AAAA;AAAAiB,EAAA,GAJhBb,WAAuC;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}