{"ast":null,"code":"import { convertToHoursMinutes, convertToMonthDay } from \"./date.util\";\nexport const convertMonthDayToId = date => date.split(\" \").join(\"-\").toLowerCase();\nexport const parseWeatherObject = data => {\n  const {\n    description,\n    icon\n  } = data.weather[0];\n  const date = convertToMonthDay();\n  return {\n    id: convertMonthDayToId(date),\n    date,\n    icon: `${process.env.REACT_APP_WEATHER_ICONS_URL}/${icon}@2x.png`,\n    description: description.charAt(0).toUpperCase() + description.slice(1),\n    // make the first letter of the description upper case\n    temp: Math.round(data.main.temp)\n  };\n};\nexport const parseForecastObject = data => {\n  const {\n    description,\n    icon,\n    main\n  } = data.weather[0];\n  const date = convertToMonthDay(data.dt_txt);\n  return {\n    id: convertMonthDayToId(date),\n    date,\n    time: convertToHoursMinutes(data.dt_txt),\n    icon: `${process.env.REACT_APP_WEATHER_ICONS_URL}/${icon}@2x.png`,\n    description: description.charAt(0).toUpperCase() + description.slice(1),\n    main,\n    temp: Math.round(data.main.temp)\n  };\n};","map":{"version":3,"names":["convertToHoursMinutes","convertToMonthDay","convertMonthDayToId","date","split","join","toLowerCase","parseWeatherObject","data","description","icon","weather","id","process","env","REACT_APP_WEATHER_ICONS_URL","charAt","toUpperCase","slice","temp","Math","round","main","parseForecastObject","dt_txt","time"],"sources":["/Users/maistor_dany/Projects/weather-app/src/utils/weather.util.ts"],"sourcesContent":["import { convertToHoursMinutes, convertToMonthDay } from \"./date.util\";\nimport { WeatherResponse } from \"../api\";\nimport { ForecastData } from \"../api/types\";\n\nexport const convertMonthDayToId = (date: string) =>\n  date.split(\" \").join(\"-\").toLowerCase();\n\nexport const parseWeatherObject = (data: WeatherResponse) => {\n  const { description, icon } = data.weather[0];\n  const date = convertToMonthDay();\n\n  return {\n    id: convertMonthDayToId(date),\n    date,\n    icon: `${process.env.REACT_APP_WEATHER_ICONS_URL}/${icon}@2x.png`,\n    description: description.charAt(0).toUpperCase() + description.slice(1), // make the first letter of the description upper case\n    temp: Math.round(data.main.temp),\n  };\n};\n\nexport const parseForecastObject = (data: ForecastData) => {\n  const { description, icon, main } = data.weather[0];\n  const date = convertToMonthDay(data.dt_txt);\n\n  return {\n    id: convertMonthDayToId(date),\n    date,\n    time: convertToHoursMinutes(data.dt_txt),\n    icon: `${process.env.REACT_APP_WEATHER_ICONS_URL}/${icon}@2x.png`,\n    description: description.charAt(0).toUpperCase() + description.slice(1),\n    main,\n    temp: Math.round(data.main.temp),\n  };\n};\n"],"mappings":"AAAA,SAASA,qBAAqB,EAAEC,iBAAiB,QAAQ,aAAa;AAItE,OAAO,MAAMC,mBAAmB,GAAIC,IAAY,IAC9CA,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC,CAACC,WAAW,CAAC,CAAC;AAEzC,OAAO,MAAMC,kBAAkB,GAAIC,IAAqB,IAAK;EAC3D,MAAM;IAAEC,WAAW;IAAEC;EAAK,CAAC,GAAGF,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;EAC7C,MAAMR,IAAI,GAAGF,iBAAiB,CAAC,CAAC;EAEhC,OAAO;IACLW,EAAE,EAAEV,mBAAmB,CAACC,IAAI,CAAC;IAC7BA,IAAI;IACJO,IAAI,EAAG,GAAEG,OAAO,CAACC,GAAG,CAACC,2BAA4B,IAAGL,IAAK,SAAQ;IACjED,WAAW,EAAEA,WAAW,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGR,WAAW,CAACS,KAAK,CAAC,CAAC,CAAC;IAAE;IACzEC,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACb,IAAI,CAACc,IAAI,CAACH,IAAI;EACjC,CAAC;AACH,CAAC;AAED,OAAO,MAAMI,mBAAmB,GAAIf,IAAkB,IAAK;EACzD,MAAM;IAAEC,WAAW;IAAEC,IAAI;IAAEY;EAAK,CAAC,GAAGd,IAAI,CAACG,OAAO,CAAC,CAAC,CAAC;EACnD,MAAMR,IAAI,GAAGF,iBAAiB,CAACO,IAAI,CAACgB,MAAM,CAAC;EAE3C,OAAO;IACLZ,EAAE,EAAEV,mBAAmB,CAACC,IAAI,CAAC;IAC7BA,IAAI;IACJsB,IAAI,EAAEzB,qBAAqB,CAACQ,IAAI,CAACgB,MAAM,CAAC;IACxCd,IAAI,EAAG,GAAEG,OAAO,CAACC,GAAG,CAACC,2BAA4B,IAAGL,IAAK,SAAQ;IACjED,WAAW,EAAEA,WAAW,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGR,WAAW,CAACS,KAAK,CAAC,CAAC,CAAC;IACvEI,IAAI;IACJH,IAAI,EAAEC,IAAI,CAACC,KAAK,CAACb,IAAI,CAACc,IAAI,CAACH,IAAI;EACjC,CAAC;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}