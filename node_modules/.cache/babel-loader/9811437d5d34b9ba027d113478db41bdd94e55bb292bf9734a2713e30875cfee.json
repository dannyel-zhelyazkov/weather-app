{"ast":null,"code":"var _jsxFileName = \"/Users/maistor_dany/Projects/weather-app/src/pages/ForecastPage.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ForecastTable, WeatherCard } from \"../components\";\nimport { useAppSelector } from \"../hooks\";\nimport styles from \"../styles/pages/forecast-page.module.scss\";\nimport { Skeleton } from \"primereact/skeleton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ForecastPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const isLoading = useAppSelector(state => state.weather.isLoading);\n  const selectedDayForecast = useAppSelector(state => state.weather.weather[id]);\n  const loadingTemplate = () => Array(5).fill(\"data\").map(() => /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"250px\",\n      height: \"250px\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n      height: \"250px\",\n      width: \"250px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this));\n  return isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loadingTemplate()\n  }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: styles.title,\n      children: \"Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeatherCard, {\n      style: {\n        marginBottom: \"4rem\"\n      },\n      weather: selectedDayForecast.weather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ForecastTable, {\n      forecast: selectedDayForecast.forecast\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ForecastPage, \"61HiLVYG/BHMvk1756l9aVKcd2U=\", false, function () {\n  return [useParams, useAppSelector, useAppSelector];\n});\n_c = ForecastPage;\nvar _c;\n$RefreshReg$(_c, \"ForecastPage\");","map":{"version":3,"names":["React","useParams","ForecastTable","WeatherCard","useAppSelector","styles","Skeleton","jsxDEV","_jsxDEV","Fragment","_Fragment","ForecastPage","_s","id","isLoading","state","weather","selectedDayForecast","loadingTemplate","Array","fill","map","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","marginBottom","forecast","_c","$RefreshReg$"],"sources":["/Users/maistor_dany/Projects/weather-app/src/pages/ForecastPage.tsx"],"sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { ForecastTable, WeatherCard } from \"../components\";\nimport { useAppSelector } from \"../hooks\";\nimport styles from \"../styles/pages/forecast-page.module.scss\";\nimport { Skeleton } from \"primereact/skeleton\";\nexport const ForecastPage: React.FC = () => {\n  const { id } = useParams();\n  const isLoading = useAppSelector((state) => state.weather.isLoading);\n  const selectedDayForecast = useAppSelector(\n    (state) => state.weather.weather[id as string],\n  );\n\n  const loadingTemplate = () =>\n    Array(5)\n      .fill(\"data\")\n      .map(() => (\n        <div style={{ width: \"250px\", height: \"250px\" }}>\n          <Skeleton height=\"250px\" width=\"250px\" />\n        </div>\n      ));\n\n  return isLoading ? (\n    <>{loadingTemplate()}</>\n  ) : (\n    <>\n      <h1 className={styles.title}>Forecast</h1>\n      <WeatherCard\n        style={{ marginBottom: \"4rem\" }}\n        weather={selectedDayForecast.weather}\n      />\n      <ForecastTable forecast={selectedDayForecast.forecast} />\n    </>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,aAAa,EAAEC,WAAW,QAAQ,eAAe;AAC1D,SAASC,cAAc,QAAQ,UAAU;AACzC,OAAOC,MAAM,MAAM,2CAA2C;AAC9D,SAASC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAC/C,OAAO,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1C,MAAM;IAAEC;EAAG,CAAC,GAAGZ,SAAS,CAAC,CAAC;EAC1B,MAAMa,SAAS,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACF,SAAS,CAAC;EACpE,MAAMG,mBAAmB,GAAGb,cAAc,CACvCW,KAAK,IAAKA,KAAK,CAACC,OAAO,CAACA,OAAO,CAACH,EAAE,CACrC,CAAC;EAED,MAAMK,eAAe,GAAGA,CAAA,KACtBC,KAAK,CAAC,CAAC,CAAC,CACLC,IAAI,CAAC,MAAM,CAAC,CACZC,GAAG,CAAC,mBACHb,OAAA;IAAKc,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC9CjB,OAAA,CAACF,QAAQ;MAACkB,MAAM,EAAC,OAAO;MAACD,KAAK,EAAC;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CACN,CAAC;EAEN,OAAOf,SAAS,gBACdN,OAAA,CAAAE,SAAA;IAAAe,QAAA,EAAGP,eAAe,CAAC;EAAC,gBAAG,CAAC,gBAExBV,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAIsB,SAAS,EAAEzB,MAAM,CAAC0B,KAAM;MAAAN,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CrB,OAAA,CAACL,WAAW;MACVmB,KAAK,EAAE;QAAEU,YAAY,EAAE;MAAO,CAAE;MAChChB,OAAO,EAAEC,mBAAmB,CAACD;IAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACFrB,OAAA,CAACN,aAAa;MAAC+B,QAAQ,EAAEhB,mBAAmB,CAACgB;IAAS;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eACzD,CACH;AACH,CAAC;AAACjB,EAAA,CA5BWD,YAAsB;EAAA,QAClBV,SAAS,EACNG,cAAc,EACJA,cAAc;AAAA;AAAA8B,EAAA,GAH/BvB,YAAsB;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}